<header class="header">
  <div class="dim-background"></div>
  <div class="nav-wrapper container" style="--custom-width: 1600px; --custom-padding: 1.8rem">
    <div class="logo-wrapper">
      <a href="/">
        <i class="fa-solid fa-circle-nodes"></i>
        <h1>OSF</h1>
      </a>
    </div>
    <nav class="pm-nav">
      <ul class="pm-nav-list">
        <li><a href="/">Inicio</a></li>
        <li><a href="/programs">Programas</a></li>
        <li><a href="/gnulinux">GNU/Linux</a></li>
        <li>
          <button id="theme-toggle">
            <i class="light fa-regular fa-sun"></i>
            <i class="dark fa-regular fa-moon"></i>
          </button>
        </li>
      </ul>
    </nav>
    <div class="hamburguer mobile-nav-toggle">
      <span class="bar"></span>
      <span class="bar"></span>
    </div>
  </div>
</header>

<style>
  .header {
    display: flex;
    align-items: center;
    background-image: var(--clr-bg-gradient);
    box-shadow: 0px 3px 10px rgba(2, 27, 44, 0.2);
    color: var(--clr-neutral-100);
    position: fixed;
    width: 100%;
    height: 60px;
    z-index: 40;
  }

  .nav-wrapper {
    display: flex;
  }

  .logo-wrapper {
    margin-right: auto;
  }

  .logo {
    color: var(--clr-text-heading);
  }

  .logo-wrapper a {
    display: flex;
    align-items: center;
    gap: 1em;
    height: 100%;
  }

  .logo-wrapper h1 {
    font-size: var(--fs-600);
  }

  .logo-wrapper i {
    font-size: var(--fs-650);
  }

  nav li {
    display: flex;
    align-items: center;
    height: 60px;
  }

  nav a {
    display: flex;
    align-items: center;
    padding: .5em 1em;
    font-size: var(--fs-450);
    color: var(--clr-text-heading)
  }

  nav a:hover {
    background-color: var(--clr-heading-accent);
    border-radius: var(--rounded-20);
  }

  #theme-toggle:hover {
    background-color: var(--clr-heading-accent);
    border-radius: var(--rounded-20);
  }

  #theme-toggle {
    width: 2.5em;
    height: 2.35em;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 0;
    background-color: transparent;
    color: var(--clr-text-heading);
    font-size: var(--fs-500);

    i:first-child {
      display: block;
    }

    i:last-child {
      display: none
    }
  }

  #theme-toggle[dark] {

    i:first-child {
      display: none;
    }

    i:last-child {
      display: block;
    }
  }

  .pm-nav-list {
    display: flex;
    align-items: center;
  }

  .hamburguer {
    width: 3em;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: end;
    flex-direction: column;
    gap: .5em;
    z-index: 90;
    display: none;
  }

  .hamburguer .bar {
    background-color: var(--clr-text-heading);
    transition: transform .2s ease;
    border-radius: var(--rounded-20);
  }

  .hamburguer .bar:first-child {
    min-width: 45px;
    min-height: 4px;
  }

  .hamburguer .bar:last-child {
    min-width: 30px;
    min-height: 4px;
  }

  .hamburguer.active .bar {
    min-width: 35px;
  }

  .hamburguer.active .bar:first-child {
    transform: rotate(45deg) translateX(2px) translateY(5px);
  }

  .hamburguer.active .bar:last-child {
    transform: rotate(-45deg) translateX(3px) translateY(-5px);
  }

  @media(width <= 700px) {
    .pm-nav-list {
      box-shadow: -10px 0px 30px rgb(0, 0, 0, .35);
      padding-inline: .8em;
      padding-top: 5em;
      align-items: end;
      background-color: var(--clr-bg-mobile-nav);
      position: fixed;
      flex-direction: column;
      top: 0;
      right: -700px;
      height: 100vmax;
      width: 400px;
      z-index: 80;
      transition: right .2s ease;
    }

    .hamburguer {
      display: flex;
    }

    .pm-nav-list.active {
      right: 0;
    }

    .pm-nav-list li {
      width: 100%;
    }

    .pm-nav-list a {
      width: 100%;
    }

    #theme-toggle {
      width: 100%;
      padding-left: 1em;
      justify-content: start;
      height: 2.2em;
    }

    html[data-overlay] {
      position: fixed; 
      overflow-y: scroll;
      width: 100%;
    }

    .dim-background {
      display: none;
      width: 100%;
      height: 100em;
      background-color: rgb(0, 0, 0, .65);
      position: fixed;
      z-index: 70;
    }

    .dim-background[active] {
      display: block;
      animation: fadeIn 300ms forwards;
    }

    .dim-background[closing] {
      display: block;
      animation: fadeOut 300ms forwards;
    }

    @media(width <= 500px) {
      .pm-nav-list {
        width: 330px;
      }
    }

  }
  
</style>

<script>
  let darkMode = localStorage.getItem('darkMode')
  const body = document.querySelector('body')
  const darkModeToggle = document.querySelector('#theme-toggle')

  const toggleSidebar = document.querySelector('.mobile-nav-toggle')
  const sidebar = document.querySelector('.pm-nav-list')
  const dimBackground = document.querySelector(".dim-background")

  toggleSidebar.addEventListener("click", () => {
    sidebar.classList.toggle("active")
    toggleSidebar.classList.toggle("active")
    if (!dimBackground.hasAttribute("active")) {
      dimBackground.setAttribute("active", "")
    } else {
      dimBackground.removeAttribute("active")
      dimBackground.setAttribute("closing", "")
      dimBackground.addEventListener("animationend", () => {
        dimBackground.removeAttribute("closing")
      })
    }
  })

  function enableDark() {
    body.setAttribute("dark-mode", "");
    darkModeToggle.setAttribute("dark", "");
    localStorage.setItem("darkMode", "enabled")
  }

  function disableDark() {
    body.removeAttribute("dark-mode")
    darkModeToggle.removeAttribute("dark")
    localStorage.setItem("darkMode", null)
  }

  if (darkMode === "enabled") {
    enableDark()
    console.log("hey")
  }

  darkModeToggle.addEventListener("click", () => {

    darkMode = localStorage.getItem("darkMode")

    if (darkMode !== "enabled") {
      enableDark();
    } else {
      disableDark();
    }
  })
</script>